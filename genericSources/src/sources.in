// -*- mode: c++ -*-
%module sources
%{
#include "flux/EventSource.h"
#include "genericSources/SpectralTransient.h"
#include "genericSources/MapCube.h"
%}
%include stl.i
%exception {
   try {
      $action
   } catch (std::exception & eObj) {
      PyErr_SetString(PyExc_RuntimeError, const_cast<char*>(eObj.what()));
      return NULL;
   }
}
%template(DoublePair) std::pair<double, double>;
%template(PairVector) std::vector<std::pair<double, double> >;
%include $(FLUXROOT)/flux/Spectrum.h
%include $(GENERICSOURCESROOT)/genericSources/SpectralTransient.h
%include $(GENERICSOURCESROOT)/genericSources/MapSource.h
%include $(GENERICSOURCESROOT)/genericSources/MapCube.h
%extend Spectrum {
   static double totalArea() {
      return EventSource::totalArea();
   }
   static void setTotalArea(double area) {
      EventSource::totalArea(area);
   }
}
